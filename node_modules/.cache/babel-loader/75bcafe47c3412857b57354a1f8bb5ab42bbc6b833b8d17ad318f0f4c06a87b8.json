{"ast":null,"code":"var _jsxFileName = \"/Users/ivanvoloshyn/Desktop/All_projects_vs/vishivankas/vishivankas/src/Components/AboutPage/Item/Grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Item from \"./Item\";\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  elements\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const elementsPerPage = 9;\n\n  // Ensure elements is an array before attempting to slice it\n  const currentElements = Array.isArray(elements) ? elements.slice((currentPage - 1) * elementsPerPage, currentPage * elementsPerPage) : [];\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"information\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Here is title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Here ll be all the info about the page Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt voluptatum corrupti labore delectus cupiditate pariatur perspiciatis amet! Vel earum magni suscipit totam consequuntur adipisci velit.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [currentElements && currentElements.length > 0 ? currentElements.map((element, index) => /*#__PURE__*/_jsxDEV(Item, {\n        data: element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No elements to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(((elements === null || elements === void 0 ? void 0 : elements.length) || 0) / elementsPerPage)\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"paginationButton\",\n          onClick: () => paginate(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Grid, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","Item","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","elements","_s","currentPage","setCurrentPage","elementsPerPage","currentElements","Array","isArray","slice","paginate","pageNumber","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","element","index","data","from","Math","ceil","_","id","onClick","_c","$RefreshReg$"],"sources":["/Users/ivanvoloshyn/Desktop/All_projects_vs/vishivankas/vishivankas/src/Components/AboutPage/Item/Grid.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Item from \"./Item\";\nimport './Grid.css'\n\n\nconst Grid = ({ elements }) => {\n\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const elementsPerPage = 9;\n\n    // Ensure elements is an array before attempting to slice it\n    const currentElements = Array.isArray(elements) ? elements.slice((currentPage - 1) * elementsPerPage, currentPage * elementsPerPage) : [];\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <div className=\"information\">\n                <h2>Here is title</h2>\n                <h4>\n                    Here ll be all the info\n                    about the page Lorem ipsum dolor sit\n                     amet consectetur adipisicing elit. Incidunt \n                     voluptatum corrupti labore delectus cupiditate pariatur\n                      perspiciatis amet! Vel earum magni suscipit totam \n                      consequuntur adipisci velit.\n                </h4>\n            </div>\n\n            <div className=\"grid\">\n\n\n                {currentElements && currentElements.length > 0 ? (\n                    currentElements.map((element, index) => (\n                        <Item key={index} data={element} />\n                    ))\n                ) : (\n                    <p>No elements to display.</p>\n                )}\n                {/* Pagination */}\n                <div className=\"pagination\">\n                    {Array.from({ length: Math.ceil((elements?.length || 0) / elementsPerPage) }, (_, index) => (\n                        <button id=\"paginationButton\" key={index} onClick={() => paginate(index + 1)}>\n                            {index + 1}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        </>\n\n    );\n\n}\n\nexport default Grid"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGnB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAG3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,eAAe,GAAG,CAAC;;EAEzB;EACA,MAAMC,eAAe,GAAGC,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,GAAGA,QAAQ,CAACQ,KAAK,CAAC,CAACN,WAAW,GAAG,CAAC,IAAIE,eAAe,EAAEF,WAAW,GAAGE,eAAe,CAAC,GAAG,EAAE;EAEzI,MAAMK,QAAQ,GAAIC,UAAU,IAAKP,cAAc,CAACO,UAAU,CAAC;EAE3D,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBACxBf,OAAA;QAAAe,QAAA,EAAI;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBpB,OAAA;QAAAe,QAAA,EAAI;MAOJ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENpB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAD,QAAA,GAGhBN,eAAe,IAAIA,eAAe,CAACY,MAAM,GAAG,CAAC,GAC1CZ,eAAe,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BxB,OAAA,CAACF,IAAI;QAAa2B,IAAI,EAAEF;MAAQ,GAArBC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACrC,CAAC,gBAEFpB,OAAA;QAAAe,QAAA,EAAG;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChC,eAEDpB,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAD,QAAA,EACtBL,KAAK,CAACgB,IAAI,CAAC;UAAEL,MAAM,EAAEM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAAxB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEiB,MAAM,KAAI,CAAC,IAAIb,eAAe;QAAE,CAAC,EAAE,CAACqB,CAAC,EAAEL,KAAK,kBACnFxB,OAAA;UAAQ8B,EAAE,EAAC,kBAAkB;UAAaC,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACW,KAAK,GAAG,CAAC,CAAE;UAAAT,QAAA,EACxES,KAAK,GAAG;QAAC,GADqBA,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhC,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACR,CAAC;AAIX,CAAC;AAAAf,EAAA,CAhDKF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAkDV,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}